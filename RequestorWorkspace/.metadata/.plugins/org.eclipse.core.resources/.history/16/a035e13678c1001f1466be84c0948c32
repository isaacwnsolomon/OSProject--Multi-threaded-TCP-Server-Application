import java.io.*;
import java.net.*;
import java.util.Scanner;

public class Requester {

    Socket requestSocket;
    ObjectOutputStream out;
    ObjectInputStream in;
    Scanner input;
    String message;

    Requester() {
        input = new Scanner(System.in);
    }

    void run() {
        try {
            requestSocket = new Socket("127.0.0.1", 2004);
            System.out.println("Connected to localhost in port 2004");

            out = new ObjectOutputStream(requestSocket.getOutputStream());
            out.flush();
            in = new ObjectInputStream(requestSocket.getInputStream());

            do {
                message = (String) in.readObject();
                System.out.println(message);
                message = input.nextLine();
                sendMessage(message);

                if (message.equals("1")) {
                	 message = (String) in.readObject();
                     System.out.println(message);
                     // Name
                     message = (String) in.readObject();
                     System.out.println(message);
                     message = input.nextLine();
                     sendMessage(message);
                     
                     boolean validEmployeeID = false;
                     do {
                         message = (String) in.readObject();
                         System.out.println(message);
                         message = input.nextLine();
                         sendMessage(message);
                         
                         // Check for error message
                         message = (String) in.readObject();
                         if (message.startsWith("ERROR:")) {
                             System.out.println(message);
                             validEmployeeID = false;
                         } else {
                             validEmployeeID = true;
                             // Put the message back since it's the next prompt
                             System.out.println(message);
                         }
                     } while (!validEmployeeID);
                     // Email (with validation)
                  // Email (with validation)
                     boolean validEmail = false;
                     do {
                         message = (String) in.readObject();  // Get "Please Enter your Email" prompt
                         System.out.println("DEBUG Client: Received email prompt: " + message);
                         System.out.println(message);
                         message = input.nextLine();          // Get email from user
                         System.out.println("DEBUG Client: User entered: " + message);
                         sendMessage(message);                // Send email to server
                         System.out.println("DEBUG Client: Sent email to server");
                         
                         try {
                             message = (String) in.readObject();  // Get either ERROR or VALID
                             System.out.println("DEBUG Client: Received server response: " + message);
                             if (message.startsWith("ERROR:")) {
                                 System.out.println(message);
                                 validEmail = false;
                             } else {
                                 validEmail = true;
                             }
                         } catch (Exception e) {
                             System.out.println("DEBUG Client: Exception while reading server response:");
                             e.printStackTrace();
                         }
                     } while (!validEmail);

                     // Get password prompt
                     message = (String) in.readObject();
                     System.out.println(message);
                     //password
         
         message = (String) in.readObject();
                    System.out.println(message);
                    message = input.nextLine();
                    sendMessage(message);
                    //dept name
                    message = (String) in.readObject();
                    System.out.println(message);
                    message = input.nextLine();
                    sendMessage(message);
                    //role
                    message = (String) in.readObject();
                    System.out.println(message);
                    message = input.nextLine();
                    sendMessage(message);
                    //success/not
                    message = (String) in.readObject();
                    System.out.println(message);
                    

                    
                } else if (message.equals("2")) {
                	 message = (String) in.readObject();
                     System.out.println(message);
                	do {
                        for (int i = 0; i < 2; i++) {
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message);
                        }

                        message = (String) in.readObject();
                        System.out.println(message);
                    } while (message.equals("Login Failed, please try again"));

                    // Main Menu
                    do {
                    	//Welcome message
                    	message = (String) in.readObject();
                        System.out.println(message);
                        //Menu choice
                        message = (String) in.readObject();
                        System.out.println(message);
                        message = input.nextLine();
                        sendMessage(message);
                        
                        if (message.equals("1")) {
                        //Confirming option 1
                        message = (String) in.readObject();
                        System.out.println(message);
                        //Accident or health
                        message = (String) in.readObject();
                        System.out.println(message);
                        message = input.nextLine();
                        sendMessage(message);   
                        //status
                        message = (String) in.readObject();
                        System.out.println(message);
                        message = input.nextLine();
                        sendMessage(message);
                      
                        //Confirmation of all details 
                        message = (String) in.readObject();
                        System.out.println(message);
                        }
                        else if(message.equalsIgnoreCase("2"))
                        {
                        	// Retrieving reports message
                        	message = (String) in.readObject();
                        	System.out.println(message);
                        	//reports
                        	message = (String) in.readObject();
                        	System.out.println(message);
                        }
                        else if(message.equalsIgnoreCase("3")) {
                            // search and update title
                            message = (String) in.readObject();
                            System.out.println(message);
                            // Enter report ID
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message); 
                            // Found report details
                            message = (String) in.readObject();
                            System.out.println(message);
                            // Employee id to assign
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message);
                            // update status prompt
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message); 
                            // Open/closed (if yes was selected)
                            if (message.equalsIgnoreCase("1")) {
                                message = (String) in.readObject();
                                System.out.println(message);
                                message = input.nextLine();
                                sendMessage(message); 
                            }
                            // Confirmed report update
                            message = (String) in.readObject();
                            System.out.println(message);
                        }
                        else if(message.equals("4")) {
                            // Retrieving assigned reports message
                            message = (String) in.readObject();
                            System.out.println(message);
                        }
                        else if(message.equals("5")) {
                            // Change password title
                            message = (String) in.readObject();
                            System.out.println(message);
                            
                            // Current password prompt
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message);
                            
                            // New password prompt
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message);
                            
                            // Confirm password prompt
                            message = (String) in.readObject();
                            System.out.println(message);
                            message = input.nextLine();
                            sendMessage(message);
                            
                            // Result message
                            message = (String) in.readObject();
                            System.out.println(message);
                        }
                    } while (!message.equals("-1"));
                }
            } while (true);

        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            try {
                in.close();
                out.close();
                requestSocket.close();
            } catch (IOException ioException) {
                ioException.printStackTrace();
            }
        }
    }

    void sendMessage(String msg) {
        try {
            out.writeObject(msg);
            out.flush();
            System.out.println("client> " + msg);
        } catch (IOException ioException) {
            ioException.printStackTrace();
        }
    }

    public static void main(String args[]) {
        Requester client = new Requester();
        client.run();
    }
}
